<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Try Dive Medical and Responsibility Declaration</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            padding: 20px;
        }
        .form-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            max-width: 800px; /* Adjust max-width to match PDF feel */
            width: 100%;
            border: 1px solid #e0e0e0;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center; /* Center the header and buttons */
        }
        .form-header {
            text-align: left; /* Left alignment */
            margin-bottom: 15px; /* Reduced margin to bring closer to spacer */
            font-size: 1.8rem;
            font-weight: bold;
            color: #2980b9; /* Blue color */
            line-height: 1.2;
            font-family: 'Ubuntu', sans-serif; /* Ubuntu font */
            width: 100%; /* Ensure it takes full width for left alignment */
        }
        .header-spacer {
            border-bottom: 2px solid #3498db; /* Blue spacer line */
            margin-bottom: 25px; /* Space after the line */
            width: 100%; /* Ensure it spans the full width */
        }
        .section-title {
            font-weight: 600;
            margin-top: 25px;
            margin-bottom: 15px;
            color: #34495e;
            font-size: 1.1rem;
            width: 100%; /* Ensure it takes full width */
            text-align: left; /* Align section titles left */
        }
        /* CSS Grid for aligning labels and inputs (most fields) */
        .form-grid {
            display: grid;
            grid-template-columns: minmax(120px, auto) 1fr; /* Column 1 for labels, Column 2 for inputs */
            column-gap: 15px;
            row-gap: 12px;
            width: 100%; /* Ensure it takes full width of form-container */
        }

        /* By default, labels go in the first column and inputs/textareas in the second */
        .form-grid label {
            grid-column: 1 / 2; /* Label in the first column */
            text-align: right;
            align-self: center; /* Vertically center label */
            font-weight: 500;
            color: #555;
            margin-right: 0; /* Handled by column-gap */
            min-width: unset; /* Let grid define the width */
        }

        .form-grid input:not(.fixed-width-input), /* Inputs that are not fixed-width */
        .form-grid textarea {
            grid-column: 2 / 3; /* Input/Textarea in the second column */
            width: 100%; /* Fill available space */
            box-sizing: border-box; /* Include padding/border in width calculation */
            padding: 10px 15px;
            border: 1px solid #cccccc;
            border-radius: 8px;
            font-size: 1rem;
            color: #333;
            outline: none;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        .form-grid input:focus,
        .form-grid textarea:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .form-grid textarea {
            min-height: 70px; /* For address */
        }

        /* Fixed-width inputs (Postcode, Telephone, Date of birth) */
        .fixed-width-input {
            width: 180px; /* Fixed width */
            max-width: 180px; /* Prevent growing */
            flex-shrink: 0; /* Prevent shrinking */
            padding: 10px 15px; /* Inherit general input styles */
            border: 1px solid #cccccc;
            border-radius: 8px;
            font-size: 1rem;
            color: #333;
            outline: none;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        /* Container for Telephone input and Date of birth fields - now directly in form-grid */
        .contact-inputs-group {
            grid-column: 2 / 3; /* Placed in the second column of the main form-grid */
            display: flex; /* Use flex to keep inputs and DOB label/input on one line */
            align-items: center;
            gap: 15px; /* Space between the telephone input and the DOB label */
            flex-wrap: wrap; /* Allow wrapping on smaller screens */
            width: 100%; /* Take full width of its grid cell */
            /* Add some top margin to separate from the email field */
            margin-top: 0px; /* Adjust this if vertical spacing is off. It should be handled by row-gap on .form-grid */
        }

        /* Date of birth label within the flex container */
        .contact-inputs-group label[for="dob"] {
            flex-shrink: 0; /* Prevent shrinking */
            text-align: right; /* Right align its own text */
            color: #555;
            font-weight: 500;
            margin-right: 0; /* Handled by gap */
            min-width: unset; /* Allow natural width */
        }


        /* Ordered List Styling for consistent margins */
        ol {
            list-style-position: outside;
            margin-left: 30px;    /* Match form-container padding for number alignment */
            padding-left: 0;      /* Remove default browser padding so numbers start at margin-left */
            width: calc(100% - 30px); /* Adjust width to prevent overflow due to margin-left */
        }

        .numbered-list-item {
            margin-bottom: 10px;
            color: #333;
            line-height: 1.4;
            /* Removed explicit padding-left and text-indent here; OL handles positioning */
            /* Text should naturally wrap and align with the start of the first line given list-style-position: outside */
        }
        .list-spacer {
            border-bottom: 2px solid #3498db;
            margin-top: 15px;
            margin-bottom: 25px;
            width: 100%;
        }

        .certify-text-blue {
            color: #2980b9 !important; /* Force blue color */
        }

        /* Styles for the main instructional text */
        .main-instruction-text {
            width: 100%; /* Ensure it spans the full width of the container */
            font-size: 1rem; /* Consistent with other body text */
            color: #555;
            line-height: 1.5;
            margin-top: 20px; /* Top margin for spacing */
            margin-bottom: 25px; /* Space before the fields below it */
            padding: 0 0px; /* No horizontal padding, let form-container padding manage it */
            text-align: left; /* Ensure it's not centered by mistake */
            font-weight: bold; /* Make the text bold as requested */
        }

        .bsac-logo {
            width: 150px; /* Adjust as needed */
            height: auto;
            margin-top: 8px; /* Adjusted margin to fit with new instruction text */
            margin-bottom: 15px; /* Space below the logo */
            display: block;
            margin-left: auto; /* Center the image */
            margin-right: auto; /* Center the image */
        }

        .button-group {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            width: 100%; /* Ensure buttons span full width if needed */
        }
        .action-button {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s, box-shadow 0.2s;
            font-weight: 600;
        }
        .print-button {
            background-color: #2ecc71;
            color: white;
            box-shadow: 0 4px 8px rgba(46, 204, 113, 0.3);
        }
        .print-button:hover {
            background-color: #27ae60;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(46, 204, 113, 0.4);
        }
        .email-button {
            background-color: #3498db;
            color: white;
            box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);
        }
        .email-button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(52, 152, 219, 0.4);
        }

        /* Message box for user feedback */
        .message-box {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 25px 40px;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            text-align: center;
            z-index: 1000;
            font-size: 1.1rem;
            color: #333;
            animation: fadeIn 0.3s ease-out;
            max-width: 90%; /* Responsive */
            min-width: 250px;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translate(-50%, -60%); }
            to { opacity: 1; transform: translate(-50%, -50%); }
        }

        .message-box.hidden {
            display: none;
        }
        .message-box button {
            margin-top: 20px;
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            background-color: #3498db;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .message-box button:hover {
            background-color: #2980b9;
        }


        /* Print specific styles */
        @media print {
            /* Remove default browser headers and footers */
            @page {
                margin: 0 !important;
            }
            html, body {
                margin: 0 !important;
                padding: 0 !important;
                /* Non-standard properties to potentially remove headers/footers in some browsers */
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }

            body {
                background-color: #fff;
                display: block;
                min-height: auto;
                font-size: 0.85rem; /* Reduced base font size for print */
            }
            .form-container {
                box-shadow: none;
                border: none;
                border-radius: 0;
                padding: 5px; /* Further reduced padding for print */
                margin: auto; /* Center the form on the page */
            }
            .button-group,
            .email-info,
            .message-box { /* Hide buttons, email info, and message box on print */
                display: none;
            }
            /* Ensure instruction text is visible on print and matches content styles */
            .main-instruction-text {
                display: block !important; /* Force display on print */
                font-size: 0.8rem !important; /* Slightly smaller for compactness */
                font-weight: bold !important; /* Keep bold for print */
                color: #000 !important; /* Ensure black text for print */
                margin-top: 8px !important; /* Tighter spacing */
                margin-bottom: 10px !important; /* Tighter spacing */
                padding: 0 !important; /* No horizontal padding */
                text-align: left !important;
                line-height: 1.2 !important; /* Tighter line height for instructions */
            }
            /* Main grid layout for form fields */
            .form-grid {
                display: grid;
                grid-template-columns: 110px 1fr; /* Fixed width for labels, auto for inputs */
                column-gap: 8px; /* Further reduced column gap */
                row-gap: 6px; /* Further reduced row gap */
                width: 100%;
            }
            .form-grid label {
                color: #000; /* Ensure black text */
                text-align: right;
                align-self: center;
                font-weight: 500;
                padding-right: 0; /* No extra padding */
            }
            /* General input/textarea print styles within the grid */
            .form-grid input,
            .form-grid textarea {
                border: none !important;
                border-bottom: 1px dotted #999 !important; /* Dotted line */
                background-color: transparent !important;
                box-shadow: none !important;
                border-radius: 0 !important;
                padding: 0 5px !important;
                color: #000;
                width: 100%; /* Fill available space */
                box-sizing: border-box; /* Important for width calculation */
                flex-grow: 1; /* Allow to grow if in a flex context */
                min-height: 1em; /* Ensure a minimum height for input lines */
                font-size: 0.85rem; /* Match body font size */
            }
            /* Hide placeholder text on print for all inputs and textareas */
            input::placeholder,
            textarea::placeholder {
                color: transparent !important;
            }
            input::-webkit-input-placeholder,
            textarea::-webkit-input-placeholder { /* Webkit browsers */
                color: transparent !important;
            }
            input::-moz-placeholder,
            textarea::-moz-placeholder { /* Firefox (older) */
                color: transparent !important;
            }
            input:-ms-input-placeholder,
            textarea:-ms-input-placeholder { /* Internet Explorer */
                color: transparent !important;
            }
            input::-ms-input-placeholder,
            textarea::-ms-ms-input-placeholder { /* Microsoft Edge */
                color: transparent !important;
            }


            .form-grid textarea {
                min-height: 3em; /* Further reduced min-height for address on print */
            }

            /* Fixed-width inputs (Postcode, Telephone, Date of birth) */
            .fixed-width-input {
                width: 150px !important; /* Slightly reduced fixed width for more space */
                max-width: 150px !important;
                flex-shrink: 0 !important;
                flex-grow: 0 !important; /* Do not grow */
            }

            /* Contact inputs group for print */
            .contact-inputs-group {
                grid-column: 2 / 3 !important;
                display: flex !important;
                align-items: center !important;
                gap: 8px !important; /* Smaller gap for print */
                flex-wrap: wrap !important;
                width: 100%;
                margin-top: 0 !important; /* Ensure no extra margin for print */
            }
            .contact-inputs-group label[for="dob"] {
                flex-shrink: 0 !important;
                text-align: right !important;
                margin-right: 0 !important;
                min-width: unset !important;
                color: #000 !important;
            }
            /* Inputs within contact-inputs-group also need dotted lines */
            .contact-inputs-group input {
                border: none !important;
                border-bottom: 1px dotted #999 !important;
                background-color: transparent !important;
                box-shadow: none !important;
                border-radius: 0 !important;
                padding: 0 5px !important;
                color: #000;
                min-height: 1em; /* Ensure a minimum height for input lines */
            }


            /* Ensure all other text elements are black for print */
            p {
                margin-bottom: 6px !important; /* Reduced paragraph margin */
                margin-top: 6px !important;
                line-height: 1.2 !important; /* Tighter line height */
                color: #000 !important;
            }
            ol {
                margin-left: 30px !important;    /* Match screen styles for print */
                padding-left: 0 !important;      /* Match screen styles for print */
                width: calc(100% - 30px) !important; /* Match screen styles for print */
            }
            li {
                margin-bottom: 3px !important; /* Further reduced list item margin */
                line-height: 1.2 !important; /* Tighter line height for list */
                color: #000 !important;
            }
            .numbered-list-item {
                /* No specific padding/indent needed here as OL handles it */
            }
            .section-title {
                margin-top: 10px !important; /* Reduced margin */
                margin-bottom: 8px !important; /* Reduced margin */
                color: #000 !important;
            }
            /* Force certify text to black for print */
            .certify-text-blue {
                color: #000 !important;
                margin-top: 10px !important; /* Reduced margin */
                margin-bottom: 8px !important; /* Reduced margin */
                font-size: 0.95rem !important; /* Slightly smaller to fit */
            }
            .form-header {
                color: #000 !important; /* Ensure header is black for print */
                margin-bottom: 8px !important; /* Reduced margin */
            }
            .header-spacer {
                margin-bottom: 10px !important; /* Reduced margin */
            }
            .list-spacer {
                margin-top: 8px !important; /* Reduced margin */
                margin-bottom: 10px !important; /* Reduced margin */
            }
            .bsac-logo {
                width: 100px !important; /* Further reduced logo size for print */
                height: auto !important;
                margin-top: 8px !important; /* Adjusted margin for print */
                margin-bottom: 8px !important; /* Adjusted margin for print */
            }
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h1 class="form-header">
            Try Dive medical and<br>
            responsibility declaration
        </h1>
        <div class="header-spacer"></div>

        <p class="text-gray-700 leading-relaxed mb-4">
            Scuba diving is a safe activity. Anyone with a medical history of diabetes, blackouts
            (epilepsy etc), perforated eardrums, high blood pressure, heart disease, any lung or
            respiratory disorder (such as COPD) or dependence on drugs may not be able to dive
            safely. If this is the case, specialist advice must be obtained before contemplating taking up
            this sport.
        </p>

        <p class="text-gray-700 leading-relaxed mb-6 font-bold">
            Try Dives are available on the understanding that the person taking part:
        </p>

        <ol class="list-decimal space-y-2 mb-6">
            <li class="numbered-list-item">Considers themselves medically fit and does not suffer from any of the disqualifying
                conditions mentioned above</li>
            <li class="numbered-list-item">If medically unfit, has obtained approval to dive from a medical referee, ukdmc.org</li>
            <li class="numbered-list-item">Will, in the interests of safety, comply with all instruction given to them by the instructor</li>
            <li class="numbered-list-item">Is able to swim and is confident in water</li>
        </ol>
        <div class="list-spacer"></div>

        <p class="text-gray-700 leading-relaxed mb-4">
            There is no lower age limit for participation in a Try Dive set by BSAC, but local organisers
            may impose a limit of minimum age or stature as they consider appropriate.
        </p>

        <p class="text-gray-700 leading-relaxed mb-6">
            Every precaution will be taken for the safety of visitors and the club or centre organising the
            Try Dive reserves the right to terminate the session should there be reason to doubt fitness,
            ability or suitability to dive.
        </p>

        <!-- New instruction text moved above the student information fields -->
        <p class="main-instruction-text font-bold">
            Please complete the form and then either use the "Print Form" button to print it and bring it along on the night OR use the "Email Completed Form" button to send us a copy directly.
        </p>

        <!-- Student Information Fields using CSS Grid -->
        <div class="form-grid">
            <label for="studentName">Name of student:<span class="text-red-500">*</span></label>
            <input type="text" id="studentName" name="studentName" required>

            <label for="address">Address:<span class="text-red-500">*</span></label>
            <textarea id="address" name="address" rows="2" required></textarea>

            <label for="postcode">Postcode:<span class="text-red-500">*</span></label>
            <input type="text" id="postcode" name="postcode" class="fixed-width-input" required>

            <label for="email">Email:<span class="text-red-500">*</span></label>
            <input type="email" id="email" name="email" required>

            <!-- Telephone no. label and the combined input group are now direct children of form-grid -->
            <label for="telephone">Telephone no:<span class="text-red-500">*</span></label>
            <div class="contact-inputs-group">
                <input type="text" id="telephone" name="telephone" class="fixed-width-input" required>
                <label for="dob">Date of birth:<span class="text-red-500">*</span></label>
                <input type="text" id="dob" name="dob" class="fixed-width-input" placeholder="DD/MM/YYYY" required onblur="checkAgeForParentSignature()">
            </div>
        </div>

        <p class="certify-text-blue leading-relaxed mt-8 mb-4 font-semibold text-center" style="width: 100%;">
            I CERTIFY THAT I COMPLY/WILL COMPLY WITH THE TERMS 1, 2, 3 AND 4 ABOVE
        </p>

        <div class="form-grid">
            <label for="studentSignature">Signature of student:<span class="text-red-500">*</span></label>
            <input type="text" id="studentSignature" name="studentSignature" placeholder="Type name to sign" required>

            <label for="parentSignature">Signature of parent/guardian (if under 18):<span id="parentSignatureAsterisk" class="text-red-500 hidden">*</span></label>
            <input type="text" id="parentSignature" name="parentSignature" placeholder="Type name to sign">
        </div>

        <!-- BSAC Logo -->
        <img src="https://i.imgur.com/GhCKuDb.png" alt="BSAC Logo" class="bsac-logo">


        <div class="button-group">
            <button onclick="window.print()" class="action-button print-button">
                Print Form
            </button>
            <button onclick="emailFormWithValidation()" class="action-button email-button">
                Email Completed Form
            </button>
        </div>

        <!-- Message box for user feedback -->
        <div id="messageBox" class="message-box hidden">
            <p id="messageText"></p>
            <button onclick="document.getElementById('messageBox').classList.add('hidden');">OK</button>
        </div>

    </div>

    <script>
        // Function to display messages in the custom message box
        function showMessage(message) {
            const messageBox = document.getElementById('messageBox');
            const messageText = document.getElementById('messageText');
            messageText.textContent = message;
            messageBox.classList.remove('hidden');
        }

        function calculateAge(dobString) {
            // Assumes dobString is in DD/MM/YYYY format
            const parts = dobString.split('/');
            if (parts.length !== 3) {
                return null; // Invalid format
            }

            const day = parseInt(parts[0], 10);
            const month = parseInt(parts[1], 10);
            const year = parseInt(parts[2], 10);

            // Basic date validation
            if (isNaN(day) || isNaN(month) || isNaN(year) || day < 1 || day > 31 || month < 1 || month > 12) {
                return null; // Invalid date numbers
            }

            const birthDate = new Date(year, month - 1, day); // Month is 0-indexed in JS Date
            const currentDate = new Date();

            // Check if the parsed date is actually valid (e.g., prevents 31/02/2000 from being valid)
            if (birthDate.getFullYear() !== year || birthDate.getMonth() !== month - 1 || birthDate.getDate() !== day) {
                return null; // Date object creation corrected an invalid date
            }

            let age = currentDate.getFullYear() - birthDate.getFullYear();

            // Adjust age if birthday hasn't occurred yet this year
            if (currentDate.getMonth() < birthDate.getMonth() ||
                (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }

        // Function to dynamically show/hide the parent signature asterisk
        function checkAgeForParentSignature() {
            const dobField = document.getElementById('dob');
            const parentSignatureAsterisk = document.getElementById('parentSignatureAsterisk');
            const dobValue = dobField.value.trim();

            if (dobValue) {
                const age = calculateAge(dobValue);
                if (age !== null && age < 18) {
                    parentSignatureAsterisk.classList.remove('hidden');
                } else {
                    parentSignatureAsterisk.classList.add('hidden');
                }
            } else {
                parentSignatureAsterisk.classList.add('hidden'); // Hide if DOB is empty
            }
        }


        function emailFormWithValidation() {
            // Initial list of fields that are *always* required
            const alwaysRequiredFields = [
                'studentName',
                'address',
                'postcode',
                'email',
                'telephone',
                'dob',
                'studentSignature'
            ];

            let allBaseFieldsFilled = true;
            let missingFieldsLabels = []; // Store labels for missing fields

            // 1. Check if all base required fields are filled
            alwaysRequiredFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (!field.value.trim()) {
                    allBaseFieldsFilled = false;
                    // Get the label text for the missing field
                    const labelElement = document.querySelector(`label[for="${field.id}"]`);
                    let labelText = labelElement ? labelElement.textContent.replace(':', '').replace('*', '').trim() : fieldId;
                    missingFieldsLabels.push(labelText);
                }
            });

            // If any base required fields are missing, show a general error and stop
            if (!allBaseFieldsFilled) {
                showMessage(`Please fill in all required fields: ${missingFieldsLabels.join(', ')}.`);
                return;
            }

            // At this point, all basic required fields (including DOB) have a value.
            // Now, perform DOB format validation.
            const dobValue = document.getElementById('dob').value.trim();
            const age = calculateAge(dobValue);

            if (age === null) {
                showMessage("Invalid Date of Birth format. Please use DD/MM/YYYY.");
                return; // Stop execution immediately if DOB format is invalid
            }

            // 3. Conditionally check parent signature if student is under 18
            const parentSignatureField = document.getElementById('parentSignature');
            if (age < 18) {
                if (!parentSignatureField.value.trim()) {
                    showMessage("Please fill in all required fields: Signature of parent/guardian is required as student is under 18.");
                    return; // Stop execution with specific message
                }
            }

            // If all validation passes, proceed to email generation

            // Get form values (again, or use a single collection from the start if preferred)
            const studentName = document.getElementById('studentName').value;
            const address = document.getElementById('address').value;
            const postcode = document.getElementById('postcode').value;
            const email = document.getElementById('email').value;
            const telephone = document.getElementById('telephone').value;
            const dob = document.getElementById('dob').value;
            const studentSignature = document.getElementById('studentSignature').value;
            const parentSignature = document.getElementById('parentSignature').value; // Optional field

            // Calculate age and determine U18 status for subject line
            let subjectSuffix = "";
            // Age is already validated and calculated above.
            if (age < 18) {
                subjectSuffix = " (U18)";
            }

            // Construct email subject
            const subject = `${studentName} has submitted a Try Dive medical form${subjectSuffix}`;

            // Construct email body
            let body = "Try Dive Medical and Responsibility Declaration Form Data:\n\n";
            body += "Student Information:\n";
            body += `Name of student: ${studentName}\n`;
            body += `Address: ${address}\n`;
            body += `Postcode: ${postcode}\n`;
            body += `Email: ${email}\n`;
            body += `Telephone no: ${telephone}\n`;
            body += `Date of birth: ${dob}\n\n`;

            body += "Medical and Responsibility Declarations:\n";
            body += `User is assumed to have read and understood the following terms:\n`;
            body += `1. Considers themselves medically fit and does not suffer from any of the disqualifying conditions mentioned above\n`;
            body += `2. If medically unfit, has obtained approval to dive from a medical referee, ukdmc.org\n`;
            body += `3. Will, in the interests of safety, comply with all instruction given to them by the instructor\n`;
            body += `4. Is able to swim and is confident in water\n\n`;


            body += "Signatures:\n";
            body += `Signature of student: ${studentSignature}\n`;
            body += `Signature of parent/guardian (if under 18): ${parentSignature || 'N/A'}\n\n`; // Show N/A if blank

            // Encode the body and subject for URL
            const mailtoLink = `mailto:ABSAC67@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;

            // Open default email client
            window.location.href = mailtoLink;
        }
    </script>
</body>
</html>
