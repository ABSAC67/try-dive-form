<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Try Dive Medical and Responsibility Declaration</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Ubuntu:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f0f0;
            display: flex;
            justify-content: center;
            align-items: flex-start;
            min-height: 100vh;
            padding: 20px;
        }
        .form-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            max-width: 800px; /* Adjust max-width to match PDF feel */
            width: 100%;
            border: 1px solid #e0e0e0;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center; /* Center the header and buttons */
        }
        .form-header {
            text-align: left; /* Left alignment */
            margin-bottom: 15px; /* Reduced margin to bring closer to spacer */
            font-size: 1.8rem;
            font-weight: bold;
            color: #2980b9; /* Blue color */
            line-height: 1.2;
            font-family: 'Ubuntu', sans-serif; /* Ubuntu font */
            width: 100%; /* Ensure it takes full width for left alignment */
        }
        .header-spacer {
            border-bottom: 2px solid #3498db; /* Blue spacer line */
            margin-bottom: 25px; /* Space after the line */
            width: 100%; /* Ensure it spans the full width */
        }
        .section-title {
            font-weight: 600;
            margin-top: 25px;
            margin-bottom: 15px;
            color: #34495e;
            font-size: 1.1rem;
            width: 100%; /* Ensure it takes full width */
            text-align: left; /* Align section titles left */
        }
        /* CSS Grid for aligning labels and inputs (most fields) */
        .form-grid {
            display: grid;
            grid-template-columns: minmax(120px, auto) 1fr; /* Column 1 for labels, Column 2 for inputs */
            column-gap: 15px;
            row-gap: 12px;
            width: 100%; /* Ensure it takes full width of form-container */
        }

        /* By default, labels go in the first column and inputs/textareas in the second */
        .form-grid label {
            grid-column: 1 / 2; /* Label in the first column */
            text-align: right;
            align-self: center; /* Vertically center label */
            font-weight: 500;
            color: #555;
            margin-right: 0; /* Handled by column-gap */
            min-width: unset; /* Let grid define the width */
        }

        .form-grid input:not(.fixed-width-input), /* Inputs that are not fixed-width */
        .form-grid textarea {
            grid-column: 2 / 3; /* Input/Textarea in the second column */
            width: 100%; /* Fill available space */
            box-sizing: border-box; /* Include padding/border in width calculation */
            padding: 10px 15px;
            border: 1px solid #cccccc;
            border-radius: 8px;
            font-size: 1rem;
            color: #333;
            outline: none;
            transition: border-color 0.2s, box-shadow 0.2s;
        }
        .form-grid input:focus,
        .form-grid textarea:focus {
            border-color: #3498db;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .form-grid textarea {
            min-height: 70px; /* For address */
        }

        /* Fixed-width inputs (Postcode, Telephone, Date of birth) */
        .fixed-width-input {
            width: 180px; /* Fixed width */
            max-width: 180px; /* Prevent growing */
            flex-shrink: 0; /* Prevent shrinking */
            padding: 10px 15px; /* Inherit general input styles */
            border: 1px solid #cccccc;
            border-radius: 8px;
            font-size: 1rem;
            color: #333;
            outline: none;
            transition: border-color 0.2s, box-shadow 0.2s;
        }

        /* Container for Telephone and Date of Birth fields to be on one line */
        .contact-details-row {
            display: flex;
            width: 100%;
            justify-content: space-between; /* Pushes Telephone to left, DOB to right */
            align-items: center;
            margin-top: 12px; /* Consistent spacing with grid rows */
            margin-bottom: 12px;
            flex-wrap: wrap; /* Allows wrapping on small screens */
        }
        .contact-field-group {
            display: flex;
            align-items: center;
            flex-shrink: 0; /* Prevents this group from shrinking too much */
        }
        .contact-field-group label {
            min-width: 120px; /* Align with form-grid labels */
            text-align: right;
            margin-right: 15px;
            font-weight: 500;
            color: #555;
            flex-shrink: 0; /* Prevent label from shrinking */
        }
        /* Specific styling for DOB label within its group */
        .contact-field-group.dob-field label {
            min-width: unset; /* Allow it to be flexible */
            text-align: left; /* As per PDF */
            margin-right: 15px; /* Space between label and input */
            margin-left: 15px; /* Space from previous input */
        }


        .numbered-list-item {
            margin-bottom: 10px;
            color: #333;
            line-height: 1.4;
            padding-left: 1.5em;
            text-indent: -1.5em;
        }
        .list-spacer {
            border-bottom: 2px solid #3498db;
            margin-top: 15px;
            margin-bottom: 25px;
            width: 100%;
        }

        .certify-text-blue {
            color: #2980b9 !important; /* Force blue color */
        }

        /* Styles for the main instructional text */
        .main-instruction-text {
            width: 100%; /* Ensure it spans the full width of the container */
            font-size: 1rem; /* Consistent with other body text */
            color: #555;
            line-height: 1.5;
            margin-top: 20px; /* Top margin for spacing */
            margin-bottom: 25px; /* Space before the fields below it */
            padding: 0 0px; /* No horizontal padding, let form-container padding manage it */
            text-align: left; /* Ensure it's not centered by mistake */
            font-weight: bold; /* Make the text bold as requested */
        }

        .bsac-logo {
            width: 150px; /* Adjust as needed */
            height: auto;
            margin-top: 8px; /* Adjusted margin to fit with new instruction text */
            margin-bottom: 15px; /* Space below the logo */
            display: block;
            margin-left: auto; /* Center the image */
            margin-right: auto; /* Center the image */
        }

        .button-group {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #eee;
            width: 100%; /* Ensure buttons span full width if needed */
        }
        .action-button {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s, box-shadow 0.2s;
            font-weight: 600;
        }
        .print-button {
            background-color: #2ecc71;
            color: white;
            box-shadow: 0 4px 8px rgba(46, 204, 113, 0.3);
        }
        .print-button:hover {
            background-color: #27ae60;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(46, 204, 113, 0.4);
        }
        .email-button {
            background-color: #3498db;
            color: white;
            box-shadow: 0 4px 8px rgba(52, 152, 219, 0.3);
        }
        .email-button:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(52, 152, 219, 0.4);
        }

        /* Message box for user feedback */
        .message-box {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            padding: 25px 40px;
            border-radius: 10px;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
            text-align: center;
            z-index: 1000;
            font-size: 1.1rem;
            color: #333;
            animation: fadeIn 0.3s ease-out;
            max-width: 90%; /* Responsive */
            min-width: 250px;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translate(-50%, -60%); }
            to { opacity: 1; transform: translate(-50%, -50%); }
        }

        .message-box.hidden {
            display: none;
        }
        .message-box button {
            margin-top: 20px;
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            background-color: #3498db;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .message-box button:hover {
            background-color: #2980b9;
        }


        /* Print specific styles */
        @media print {
            /* Remove default browser headers and footers */
            @page {
                margin: 0 !important;
            }
            html, body {
                margin: 0 !important;
                padding: 0 !important;
                /* Non-standard properties to potentially remove headers/footers in some browsers */
                -webkit-print-color-adjust: exact;
                print-color-adjust: exact;
            }

            body {
                background-color: #fff;
                display: block;
                min-height: auto;
            }
            .form-container {
                box-shadow: none;
                border: none;
                border-radius: 0;
                padding: 10px; /* Further reduced padding for print */
                margin: auto; /* Center the form on the page */
            }
            .button-group,
            .email-info,
            .message-box { /* Hide buttons, email info, and message box on print */
                display: none;
            }
            /* Ensure instruction text is visible on print and matches content styles */
            .main-instruction-text {
                display: block !important; /* Force display on print */
                font-size: 0.9rem !important; /* Slightly smaller for compactness */
                font-weight: bold !important; /* Keep bold for print */
                color: #000 !important; /* Ensure black text for print */
                margin-top: 10px !important; /* Tighter spacing */
                margin-bottom: 15px !important; /* Tighter spacing */
                padding: 0 !important; /* No horizontal padding */
                text-align: left !important;
                line-height: 1.3 !important; /* Tighter line height for instructions */
            }
            /* Main grid layout for form fields */
            .form-grid {
                display: grid;
                grid-template-columns: minmax(120px, auto) 1fr; /* Keep screen's column structure */
                column-gap: 8px; /* Further reduced column gap */
                row-gap: 6px; /* Further reduced row gap */
                width: 100%;
            }
            .form-grid label {
                color: #000; /* Ensure black text */
                text-align: right;
                align-self: center;
                font-weight: 500;
            }
            /* General input/textarea print styles within the grid */
            .form-grid input,
            .form-grid textarea {
                border: none !important;
                border-bottom: 1px dotted #999 !important; /* Dotted line */
                background-color: transparent !important;
                box-shadow: none !important;
                border-radius: 0 !important;
                padding: 0 5px !important;
                color: #000;
                width: 100%; /* Fill available space */
                box-sizing: border-box; /* Important for width calculation */
                flex-grow: 1; /* Allow to grow if in a flex context */
                min-height: 1em; /* Ensure a minimum height for input lines */
            }
            /* Hide placeholder text on print for all inputs and textareas */
            input::placeholder,
            textarea::placeholder {
                color: transparent !important;
            }
            input::-webkit-input-placeholder,
            textarea::-webkit-input-placeholder { /* Webkit browsers */
                color: transparent !important;
            }
            input::-moz-placeholder,
            textarea::-moz-placeholder { /* Firefox (older) */
                color: transparent !important;
            }
            input:-ms-input-placeholder,
            textarea:-ms-input-placeholder { /* Internet Explorer */
                color: transparent !important;
            }
            input::-ms-input-placeholder,
            textarea::-ms-ms-input-placeholder { /* Microsoft Edge */
                color: transparent !important;
            }


            .form-grid textarea {
                min-height: 3.5em; /* Further reduced min-height for address on print */
            }

            /* Fixed-width inputs (Postcode, Telephone, Date of birth) */
            .fixed-width-input {
                width: 160px !important; /* Slightly reduced fixed width for more space */
                max-width: 160px !important;
                flex-shrink: 0 !important;
                flex-grow: 0 !important; /* Do not grow */
            }

            /* Container for Telephone and Date of Birth fields on one line */
            .contact-details-row {
                display: flex; /* Maintain flex layout */
                width: 100%;
                justify-content: space-between; /* Maintain positioning */
                align-items: center;
                margin-top: 6px; /* Further reduced margin */
                margin-bottom: 6px; /* Further reduced margin */
                flex-wrap: wrap;
            }
            .contact-field-group {
                display: flex; /* Maintain flex for label/input pairing */
                align-items: center;
                flex-shrink: 0;
            }
            .contact-field-group label {
                color: #000;
                text-align: right;
                margin-right: 8px; /* Reduced margin */
                font-weight: 500;
                min-width: 110px; /* Slightly reduced min-width */
                flex-shrink: 0;
            }
            /* Specific style for DOB label within its group (print) */
            .contact-field-group.dob-field label {
                text-align: left !important; /* Keep left align for DOB label */
                margin-left: 8px !important; /* Reduced margin */
                min-width: unset !important;
            }
            /* Inputs in contact-details-row also need dotted lines */
            .contact-details-row input {
                border: none !important;
                border-bottom: 1px dotted #999 !important;
                background-color: transparent !important;
                box-shadow: none !important;
                border-radius: 0 !important;
                padding: 0 5px !important;
                color: #000;
                min-height: 1em; /* Ensure a minimum height for input lines */
            }

            /* Ensure all other text elements are black for print */
            p {
                margin-bottom: 6px !important; /* Reduced paragraph margin */
                margin-top: 6px !important;
                line-height: 1.3 !important; /* Tighter line height */
                color: #000 !important;
            }
            ol, li {
                margin-bottom: 3px !important; /* Further reduced list item margin */
                line-height: 1.2 !important; /* Tighter line height for list */
                color: #000 !important;
            }
            .section-title {
                margin-top: 10px !important; /* Reduced margin */
                margin-bottom: 8px !important; /* Reduced margin */
                color: #000 !important;
            }
            /* Force certify text to black for print */
            .certify-text-blue {
                color: #000 !important;
                margin-top: 10px !important; /* Reduced margin */
                margin-bottom: 8px !important; /* Reduced margin */
                font-size: 0.95rem !important; /* Slightly smaller to fit */
            }
            .form-header {
                color: #000 !important; /* Ensure header is black for print */
                margin-bottom: 8px !important; /* Reduced margin */
            }
            .header-spacer {
                margin-bottom: 10px !important; /* Reduced margin */
            }
            .list-spacer {
                margin-top: 8px !important; /* Reduced margin */
                margin-bottom: 10px !important; /* Reduced margin */
            }
            .bsac-logo {
                width: 100px !important; /* Further reduced logo size for print */
                height: auto !important;
                margin-top: 8px !important; /* Adjusted margin for print */
                margin-bottom: 8px !important; /* Adjusted margin for print */
            }
        }
    </style>
</head>
<body>
    <div class="form-container">
        <h1 class="form-header">
            Try Dive medical and<br>
            responsibility declaration
        </h1>
        <div class="header-spacer"></div>

        <p class="text-gray-700 leading-relaxed mb-4">
            Scuba diving is a safe activity. Anyone with a medical history of diabetes, blackouts
            (epilepsy etc), perforated eardrums, high blood pressure, heart disease, any lung or
            respiratory disorder (such as COPD) or dependence on drugs may not be able to dive
            safely. If this is the case, specialist advice must be obtained before contemplating taking up
            this sport.
        </p>

        <p class="text-gray-700 leading-relaxed mb-6 font-bold">
            Try Dives are available on the understanding that the person taking part:
        </p>

        <ol class="list-decimal pl-5 space-y-2 mb-6">
            <li class="numbered-list-item">Considers themselves medically fit and does not suffer from any of the disqualifying
                conditions mentioned above</li>
            <li class="numbered-list-item">If medically unfit, has obtained approval to dive from a medical referee, ukdmc.org</li>
            <li class="numbered-list-item">Will, in the interests of safety, comply with all instruction given to them by the instructor</li>
            <li class="numbered-list-item">Is able to swim and is confident in water</li>
        </ol>
        <div class="list-spacer"></div>

        <p class="text-gray-700 leading-relaxed mb-4">
            There is no lower age limit for participation in a Try Dive set by BSAC, but local organisers
            may impose a limit of minimum age or stature as they consider appropriate.
        </p>

        <p class="text-gray-700 leading-relaxed mb-6">
            Every precaution will be taken for the safety of visitors and the club or centre organising the
            Try Dive reserves the right to terminate the session should there be reason to doubt fitness,
            ability or suitability to dive.
        </p>

        <!-- New instruction text moved above the student information fields -->
        <p class="main-instruction-text font-bold">
            Please complete the form and then either use the "Print Form" button to print it and bring it along on the night OR use the "Email Completed Form" button to send us a copy directly.
        </p>

        <!-- Student Information Fields using CSS Grid -->
        <div class="form-grid">
            <label for="studentName">Name of student:<span class="text-red-500">*</span></label>
            <input type="text" id="studentName" name="studentName" required>

            <label for="address">Address:<span class="text-red-500">*</span></label>
            <textarea id="address" name="address" rows="2" required></textarea>

            <label for="postcode">Postcode:<span class="text-red-500">*</span></label>
            <input type="text" id="postcode" name="postcode" class="fixed-width-input" required>

            <label for="email">Email:<span class="text-red-500">*</span></label>
            <input type="email" id="email" name="email" required>
        </div>

        <!-- Separate row for Telephone and Date of Birth -->
        <div class="contact-details-row">
            <div class="contact-field-group">
                <label for="telephone">Telephone no:<span class="text-red-500">*</span></label>
                <input type="text" id="telephone" name="telephone" class="fixed-width-input" required>
            </div>
            <div class="contact-field-group dob-field">
                <label for="dob">Date of birth:<span class="text-red-500">*</span></label>
                <input type="text" id="dob" name="dob" class="fixed-width-input" placeholder="DD/MM/YYYY" required>
            </div>
        </div>

        <p class="certify-text-blue leading-relaxed mt-8 mb-4 font-semibold text-center" style="width: 100%;">
            I CERTIFY THAT I COMPLY/WILL COMPLY WITH THE TERMS 1, 2, 3 AND 4 ABOVE
        </p>

        <div class="form-grid">
            <label for="studentSignature">Signature of student:<span class="text-red-500">*</span></label>
            <input type="text" id="studentSignature" name="studentSignature" placeholder="Type name to sign" required>

            <label for="parentSignature">Signature of parent/guardian (if under 18):</label>
            <input type="text" id="parentSignature" name="parentSignature" placeholder="Type name to sign">
        </div>

        <!-- BSAC Logo -->
        <img src="https://i.imgur.com/GhCKuDb.png" alt="BSAC Logo" class="bsac-logo">


        <div class="button-group">
            <button onclick="window.print()" class="action-button print-button">
                Print Form
            </button>
            <button onclick="emailFormWithValidation()" class="action-button email-button">
                Email Completed Form
            </button>
        </div>

        <!-- Message box for user feedback -->
        <div id="messageBox" class="message-box hidden">
            <p id="messageText"></p>
            <button onclick="document.getElementById('messageBox').classList.add('hidden');">OK</button>
        </div>

    </div>

    <script>
        // Function to display messages in the custom message box
        function showMessage(message) {
            const messageBox = document.getElementById('messageBox');
            const messageText = document.getElementById('messageText');
            messageText.textContent = message;
            messageBox.classList.remove('hidden');
        }

        function calculateAge(dobString) {
            // Assumes dobString is in DD/MM/YYYY format
            const parts = dobString.split('/');
            if (parts.length !== 3) {
                return null; // Invalid format
            }

            const day = parseInt(parts[0], 10);
            const month = parseInt(parts[1], 10);
            const year = parseInt(parts[2], 10);

            // Basic date validation
            if (isNaN(day) || isNaN(month) || isNaN(year) || day < 1 || day > 31 || month < 1 || month > 12) {
                return null; // Invalid date numbers
            }

            const birthDate = new Date(year, month - 1, day); // Month is 0-indexed in JS Date
            const currentDate = new Date();

            // Check if the parsed date is actually valid (e.g., prevents 31/02/2000 from being valid)
            if (birthDate.getFullYear() !== year || birthDate.getMonth() !== month - 1 || birthDate.getDate() !== day) {
                return null; // Date object creation corrected an invalid date
            }

            let age = currentDate.getFullYear() - birthDate.getFullYear();

            // Adjust age if birthday hasn't occurred yet this year
            if (currentDate.getMonth() < birthDate.getMonth() ||
                (currentDate.getMonth() === birthDate.getMonth() && currentDate.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }

        function emailFormWithValidation() {
            // List of required fields by their IDs
            const requiredFields = [
                'studentName',
                'address',
                'postcode',
                'email',
                'telephone',
                'dob',
                'studentSignature'
            ];

            let allFieldsFilled = true;
            let missingFields = [];

            // Check if all required fields are filled
            requiredFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (!field.value.trim()) {
                    allFieldsFilled = false;
                    missingFields.push(field.previousElementSibling.textContent.replace(':', '').replace('*', '').trim());
                    // Add a temporary visual cue if desired, e.g., field.style.borderColor = 'red';
                }
            });

            if (!allFieldsFilled) {
                showMessage(`Please fill in all required fields: ${missingFields.join(', ')}.`);
                return; // Stop execution if validation fails
            }

            // Get form values after validation
            const studentName = document.getElementById('studentName').value;
            const address = document.getElementById('address').value;
            const postcode = document.getElementById('postcode').value;
            const email = document.getElementById('email').value;
            const telephone = document.getElementById('telephone').value;
            const dob = document.getElementById('dob').value;
            const studentSignature = document.getElementById('studentSignature').value;
            const parentSignature = document.getElementById('parentSignature').value; // Optional field

            // Calculate age and determine U18 status
            let subjectSuffix = "";
            const age = calculateAge(dob);

            if (age === null) {
                showMessage("Invalid Date of Birth format. Please use DD/MM/YYYY.");
                return; // Stop if DOB is invalid
            } else if (age < 18) {
                subjectSuffix = " (U18)";
            }

            // Construct email subject
            const subject = `${studentName} has submitted a Try Dive medical form${subjectSuffix}`;

            // Construct email body
            let body = "Try Dive Medical and Responsibility Declaration Form Data:\n\n";
            body += "Student Information:\n";
            body += `Name of student: ${studentName}\n`;
            body += `Address: ${address}\n`;
            body += `Postcode: ${postcode}\n`;
            body += `Email: ${email}\n`;
            body += `Telephone no: ${telephone}\n`;
            body += `Date of birth: ${dob}\n\n`;

            body += "Medical and Responsibility Declarations:\n";
            body += `User is assumed to have read and understood the following terms:\n`;
            body += `1. Considers themselves medically fit and does not suffer from any of the disqualifying conditions mentioned above\n`;
            body += `2. If medically unfit, has obtained approval to dive from a medical referee, ukdmc.org\n`;
            body += `3. Will, in the interests of safety, comply with all instruction given to them by the instructor\n`;
            body += `4. Is able to swim and is confident in water\n\n`;


            body += "Signatures:\n";
            body += `Signature of student: ${studentSignature}\n`;
            body += `Signature of parent/guardian (if under 18): ${parentSignature || 'N/A'}\n\n`; // Show N/A if blank

            // Encode the body and subject for URL
            const mailtoLink = `mailto:ABSAC67@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;

            // Open default email client
            window.location.href = mailtoLink;
        }
    </script>
</body>
</html>

